<?php // 格式化内容function wapFormatContent($content, $url = false, $from_url = '') {	if($url){		$content = preg_replace('/((?:https?|mailto).*?)(\s|　|&nbsp;|<br|\'|\"|$)/', '<a href="'.U('wap/Index/urlalert').'&from_url='.$from_url.'&url=\1">\1</a>\2', $content);	}	$content = preg_replace_callback("/\[(.+?)\]/is",replaceEmot,$content);	$content = preg_replace_callback("/#(.+?)#/is",wapFormatTopic,$content);	$content = preg_replace_callback("/@([\w\\x80-\\xff-]+?)([\s|:]|$)/is",wapFormatUser,$content);	return $content;}// 格式化评论function wapFormatComment($content,$url=false, $from_url = '') {	if($url){		$content = preg_replace('/((?:https?|mailto).*?)(\s|　|&nbsp;|<br|\'|\"|$)/', '<a href="'.U('wap/Index/urlalert').'&from_url='.$from_url.'&url=\1">\1</a>\2', $content);	}    $content = preg_replace_callback("/\[(.+?)\]/is",replaceEmot,$content);    $content = preg_replace_callback("/@(.+?)([\s|:]|$)/is",wapFormatUser,$content);    return $content;}// 话题格式化回调function wapFormatTopic($data) {	return "<a href=".U('wap/Index/doSearch',array('key'=>t($data[1]))).">".$data[0]."</a>";}// 用户连接格式化回调function wapFormatUser($name) {	$info = model('User')->where("uname='{$name[1]}'")->find();	if( $info ){		return "<a href=".U('wap/Index/weibo',array('uid'=>$info['uid'])).">".$name[0]."</a>";	}else{		return "$name[0]";	}}// 短地址function getContentUrl($url) {	return getShortUrl( $url[1] ).' ';}?>