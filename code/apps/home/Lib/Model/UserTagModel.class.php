<?php class UserTagModel extends Model{	var $tableName = 'user_tag';		//查找指定签标的用户	function doSearchTag($k){		global $ts;		$keyinfo = M('tag')->where("tag_name='{$k}'")->find();		if($keyinfo && $k ){			$list = $this->where("tag_id=".$keyinfo['tag_id'])->field('uid')->findpage();			foreach ($list['data'] as $k=>$v){				$list['data'][$k]['user'] = M('user')->where('uid='.$v['uid'])->field('location')->find();				$list['data'][$k]['taglist'] = $this->getUserTagList($v['uid']);				$list['data'][$k]['following'] = M('weibo_follow')->where('uid='.$v['uid'].' AND type=0')->count();				$list['data'][$k]['follower']  = M('weibo_follow')->where('fid='.$v['uid'].' AND type=0')->count();				$list['data'][$k]['followState']  = getFollowState( $ts['user']['uid'] , $v['uid'] );			}		}else{			$list['count'] = 0;		}				return $list;	}		//获取用户Tag列表	function getUserTagList($uid){		return $this->query("SELECT a.*,b.tag_name FROM ts_user_tag a LEFT JOIN ts_tag b ON b.tag_id=a.tag_id WHERE a.uid=$uid ORDER BY a.user_tag_id ASC");	}		//获取感兴趣的Tag列表	function getFavTageList($uid){		return $this->query("SELECT * FROM ts_tag WHERE tag_id NOT IN (SELECT tag_id FROM ts_user_tag where uid=$uid) ORDER BY RAND() LIMIT 10");	}		//添加Tag by Id	function addUserTagById($tagid,$uid){		$tagInfo = M('tag')->where('tag_id='.$tagid)->find();		if($tagInfo){			$userTagInfo = $this->where("uid=$uid AND tag_id=".$tagInfo['tag_id'])->find();			if(!$userTagInfo){				$data['uid'] = $uid;				$data['tag_id'] = $tagInfo['tag_id'];				$data['user_tag_id'] = $this->add($data);				$data['tag_name'] = $tagInfo['tag_name'];				$return['code'] = '1';				$return['data'] = $data;			}else{				$return['code'] =  '0' ;			}		}else{			$return['code'] = '0';		}				return json_encode( $return );	}		//添加用户tag	function addUserTagByName($tagname,$uid){		$tagInfo = $this->addTags($tagname);		if($tagInfo){			foreach ($tagInfo as $k=>$v){				$userTagInfo = $this->where("uid=$uid AND tag_id=".$v['tag_id'])->find();				if(!$userTagInfo){					$data['uid'] = $uid;					$data['tag_id'] = $v['tag_id'];					if( $v['user_tag_id'] = $this->add($data) ){						$tagdata[] = $v;					}				}			}			if($tagdata){		    	$return['code'] =  '1' ;		    	$return['data'] =  $tagdata ;			}else{				$return['code'] =  '0' ;			}		}else{			$return['code'] =  '-1';		}				return json_encode( $return );	}		function doDel($tagid,$uid){		if( $this->where("user_tag_id=$tagid AND uid=$uid")->delete() ){			return '1';		}	}		//添加全局tag	private function addTags($tagname){		$tagname = $tagname;		if(!$tagname) return false;		$tagname = explode(',', $tagname);		foreach($tagname as $v){			$result[] = $this->addOneTag($v);		}		return $result;			}		private function addOneTag($tagname){		$map['tag_name'] = t($tagname);		if( $info = M('tag')->where($map)->find() ){			return $info;		}else{			$map['tag_id'] = M('tag')->add($map);			return $map;		}	}}?>