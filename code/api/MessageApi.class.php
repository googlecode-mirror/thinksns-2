<?php class MessageApi extends Api{		private function __formatMessageList($message) {		foreach ($message as $k => $v) {			$message[$k]['from_uname']	= getUserName($v['from_uid']);			$message[$k]['to_uname']	= getUserName($v['to_uid']);			$message[$k]['from_face']	= getUserFace($v['from_uid']);			$message[$k]['to_face']		= getUserFace($v['to_uid']);			$message[$k]['timestmap']	= $v['ctime'];			$message[$k]['ctime']		= date('Y-m-d H:i', $v['ctime']);		}		return $message;	}		// 返回用户的最新n条私信，并包含发送者和接受者的ID,姓名,头像	public function inbox() {		$this->data['type'] 	= $this->data['type']	? $this->data['type'] : 'all';		$this->data['order']	= $this->data['order'] == 'ASC'	? 'message_id ASC' : 'message_id DESC';		$message = model('Message')->getInboxByUidFromApi($this->mid, $this->data['type'], $this->since_id, $this->max_id, $this->count, $this->page, $this->data['order']);		$message = $this->__formatMessageList($message);		return $message;	}		// 获取当前用户发送的最新私信列表	public function outbox() {		$this->data['order'] = $this->data['order'] == 'ASC'	? 'message_id ASC' : 'message_id DESC';		$message = model('Message')->getOutboxByUidFromApi($this->mid, $this->since_id, $this->max_id, $this->count, $this->page, $this->data['order']);		$message = $this->__formatMessageList($message);		return $message;	}		// 发送私信	public function create() {		if ( empty($this->data['to_uid']) || empty($this->data['title']) || empty($this->data['content']) ) {			return false;		}		$data['to'] 		= $this->data['to_uid'];		$data['title']		= $this->data['title'];		$data['content']	= $this->data['content'];		return model('Message')->postMessage($data, $this->mid);	}		// 删除私信	public function destroy() {		return model('Message')->deleteMessageById($this->mid, t($this->data['message_id']));	}}?>